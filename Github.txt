2014/05/13現在
横浜支店　宇野

【GitHubについて】

・ソースコード管理用の分散型バージョン管理システム「Git」を使ったホスティングサービス[1]

・プロジェクトを非公開で管理する場合は有料プラン？[2]

・ローカル環境に全ての変更履歴を含む完全なリポジトリの複製が作成される[3]


【できること・できないこと】(web引用)
・Gitはコマンドラインツールだが，GitHubはWeb上でグラフィカルなユーザインターフェースを提供する．
・Wikiやタスク管理的な機能もついている
・ソースコードをSNS的にユーザー間でやりとりできる
・Gitは，ファイル内の何行目の何文字目を変えたのかまで記録．Gitはソースコードの管理に特化したシステム．
・両者が同じファイルのどことどこを変更したのか見比べ，お互いの変更を反映した最新の状態してくれる．

【GitHubでもできること】(web引用)
・ファイル作成や編集作業ができて全てコミットとして記録される．
・ブランチの作成や移動ができてブランチ上でも作業ができる．
・ブランチ同士のマージもpull requestを利用することで簡単にできる．
・

【GitHubでできないこと】(web引用)
・リモート上での作業なので全てコミットとして記録されてしまう．
・容易に過去のコミットへ戻す等のコマンドは用意されていない？
・Gitコマンドが打てない
http://kozyty.com/blog/2013/03/lets_try_git_at_github/


【GitHubの利点】(web引用)
GitHubの最大の目玉機能が“フォーク(forking)”だ。フォークとは、食器のフォークの先端のように、一つのプロジェクトが複数に分派していくこと。それをGitHubでは、誰かのリポジトリをほかの人がコピーすることによって行う。オリジナルに対するライト(write, 書き込み)アクセスがなくても、それを自分のところで改変できる。自分が行った変更をオリジナルに反映したかったら、オリジナルのオーナーに“プルリクエスト(pull request)”と呼ばれる通知を送る。そしてオーナーは、ボタンをクリックするだけで、その人のリポジトリに対して行われた変更を自分のリポジトリにも取り入れることができる。人のコードを自分の（メインの）コードに導入することを、デベロッパ界隈の用語でマージする(merge, 併合)と言う。マージは複数のデベロッパが関わるプロジェクトにおいて最重要な工程であり、GitHubではそれが安全確実迅速にできる









【参考文献】

[1] http://www.atmarkit.co.jp/fjava/column/andoh/andoh60.html
[2] http://wp.yat-net.com/?p=3874
[3] http://blog.sixapart.jp/2014-03/mttips-02-what-is-git.html





・http://www.backlog.jp/git-guide/intro/intro1_1.html
・http://blog.asial.co.jp/894
・http://tande.jp/lab/2012/08/1871
